volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  stable_ts_models:

networks:
  autoreel:

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: postgres
    networks: ["autoreel"]
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: n8n-custom:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - COMPOSE_BAKE=true
    hostname: n8n
    container_name: n8n
    networks: ["autoreel"]
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
      - ./storage:/storage
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - PATH=/google-cloud-sdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - CLOUDSDK_CONFIG=/home/node/.config/gcloud
      - GENERIC_TIMEZONE=Asia/Ho_Chi_Minh
      - WEBHOOK_URL=https://n8n.autoreel.io.vn/
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_PUSH_BACKEND=websocket
      - N8N_RUNNERS_ENABLED=true
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ["autoreel"]
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  comfyui:
    image: yanwk/comfyui-boot:cu124-slim
    hostname: comfyui
    container_name: comfyui
    networks: ["autoreel"]
    restart: unless-stopped
    ports:
      - 8188:8188
    volumes:
      - ./storage:/storage
    environment:
      - WANTED_UID=1000
      - WANTED_GID=1000
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  stable_ts:
    build:
      context: ./stable-ts
      dockerfile: Dockerfile
      args:
        - COMPOSE_BAKE=true
    container_name: stable_ts
    networks: ["autoreel"]
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - stable_ts_models:/models
    environment:
      - COMPOSE_BAKE=true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  ffmpeg-wrapper:
    build:
      context: ./ffmpeg-wrapper
      dockerfile: Dockerfile
      args:
        - COMPOSE_BAKE=true
    container_name: ffmpeg-wrapper
    ports:
      - "3000:3000"
    networks: ["autoreel"]
    restart: unless-stopped
    depends_on:
      - stable_ts
