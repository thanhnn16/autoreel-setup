/**
 * Service xử lý phụ đề
 */
import fs from 'fs';
import path from 'path';
import ffmpegConfig from '../config/ffmpeg.js';
import logger from '../utils/logger.js';
import { formatAssTime } from '../utils/ffmpeg.js';
import { saveToFile } from '../utils/fileManager.js';
import { downloadFile } from './fileDownloader.js';
import { ensureDir } from '../utils/fileManager.js';

/**
 * Tạo file phụ đề ASS từ văn bản
 * @param {string} text - Nội dung phụ đề
 * @param {string} outputPath - Đường dẫn file phụ đề
 * @param {Object} options - Các tùy chọn bổ sung
 * @returns {Promise<string>} - Đường dẫn file phụ đề
 */
async function createAssSubtitle(text, outputPath, options = {}) {
  const {
    taskId,
    startTime = 0,
    endTime = 10,
    fontName = ffmpegConfig.subtitle.fontName,
    fontSize = ffmpegConfig.subtitle.fontSize,
    primaryColor = ffmpegConfig.subtitle.primaryColor,
    outlineColor = ffmpegConfig.subtitle.outlineColor,
    outlineWidth = ffmpegConfig.subtitle.outlineWidth,
  } = options;
  
  const logPrefix = taskId ? `[Task ${taskId}]` : '';
  logger.info(`${logPrefix} Tạo file phụ đề ASS`, 'SubtitleProcessor');
  
  // Định dạng thời gian
  const formattedStartTime = formatAssTime(startTime);
  const formattedEndTime = formatAssTime(endTime);
  
  // Tạo nội dung file ASS
  const assContent = `[Script Info]
; Script generated by FFmpeg-Wrapper
Title: Subtitle
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1920
PlayResY: 1080

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,${fontName},${fontSize},&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,${outlineWidth},0,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,${formattedStartTime},${formattedEndTime},Default,,0,0,0,,${text}
`;

  // Lưu file ASS
  await saveToFile(outputPath, assContent);
  logger.info(`${logPrefix} Đã tạo file phụ đề ASS: ${outputPath}`, 'SubtitleProcessor');
  
  return outputPath;
}

/**
 * Xử lý file phụ đề ASS từ URL hoặc đường dẫn cục bộ
 * @param {string} subtitleSource - URL hoặc đường dẫn cục bộ của file phụ đề
 * @param {string} outputDir - Thư mục đích
 * @param {Object} options - Các tùy chọn bổ sung
 * @returns {Promise<string>} - Đường dẫn file phụ đề đã xử lý
 */
async function processAssSubtitle(subtitleSource, outputDir, options = {}) {
  const { taskId, duration = 0 } = options;
  const logPrefix = taskId ? `[Task ${taskId}]` : '';
  
  try {
    logger.info(`${logPrefix} Bắt đầu xử lý phụ đề từ ${subtitleSource}`, 'SubtitleProcessor');
    
    // Tạo tên file phụ đề
    const subtitleFilename = `subtitle_${taskId || Date.now()}.ass`;
    const subtitlePath = path.join(outputDir, subtitleFilename);
    
    // Đảm bảo thư mục đích tồn tại
    await ensureDir(outputDir);
    
    // Nếu là URL, tải file phụ đề
    if (subtitleSource.startsWith('http')) {
      await downloadFile(subtitleSource, subtitlePath, { taskId });
    } 
    // Nếu là đường dẫn cục bộ, sao chép file
    else if (fs.existsSync(subtitleSource)) {
      logger.info(`${logPrefix} Sao chép file phụ đề từ ${subtitleSource} đến ${subtitlePath}`, 'SubtitleProcessor');
      fs.copyFileSync(subtitleSource, subtitlePath);
    }
    // Nếu là văn bản, tạo file phụ đề ASS
    else {
      await createAssSubtitle(subtitleSource, subtitlePath, { 
        taskId, 
        startTime: 0,
        endTime: duration || 10,
        ...options
      });
    }
    
    // Kiểm tra xem file phụ đề có tồn tại không
    if (!fs.existsSync(subtitlePath)) {
      throw new Error(`File phụ đề không tồn tại sau khi xử lý: ${subtitlePath}`);
    }
    
    logger.info(`${logPrefix} Đã xử lý phụ đề thành công: ${subtitlePath}`, 'SubtitleProcessor');
    return subtitlePath;
  } catch (error) {
    logger.error(`${logPrefix} Lỗi khi xử lý phụ đề: ${error.message}`, 'SubtitleProcessor');
    throw error;
  }
}

export {
  createAssSubtitle,
  processAssSubtitle
}; 